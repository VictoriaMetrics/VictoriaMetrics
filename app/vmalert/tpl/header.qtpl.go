// Code generated by qtc from "header.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line app/vmalert/tpl/header.qtpl:1
package tpl

//line app/vmalert/tpl/header.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line app/vmalert/tpl/header.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line app/vmalert/tpl/header.qtpl:1
func StreamHeader(qw422016 *qt422016.Writer, title string, pages []NavItem) {
//line app/vmalert/tpl/header.qtpl:1
	qw422016.N().S(`
<!DOCTYPE html>
<html lang="en">
<head>
    <title>vmalert`)
//line app/vmalert/tpl/header.qtpl:5
	if title != "" {
//line app/vmalert/tpl/header.qtpl:5
		qw422016.N().S(` - `)
//line app/vmalert/tpl/header.qtpl:5
		qw422016.E().S(title)
//line app/vmalert/tpl/header.qtpl:5
	}
//line app/vmalert/tpl/header.qtpl:5
	qw422016.N().S(`</title>
    <link href="static/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        body{
          min-height: 75rem;
          padding-top: 4.5rem;
        }
        .group-heading {
            cursor: pointer;
            padding: 5px;
            margin-top: 5px;
            position: relative;
        }
        .group-heading .anchor {
            position:absolute;
            top:-60px;
        }
        .group-heading span {
            float: right;
            margin-left: 5px;
            margin-right: 5px;
        }
         .group-heading:hover {
            background-color: #f8f9fa!important;
        }
        .table {
            table-layout: fixed;
        }
        .table .error-cell{
            word-break: break-word;
            font-size: 14px;
        }
        pre {
            overflow: scroll;
            min-height: 30px;
            max-width: 100%;
        }
        pre::-webkit-scrollbar {
          -webkit-appearance: none;
          width: 0px;
          height: 5px;
        }
        pre::-webkit-scrollbar-thumb {
          border-radius: 5px;
          background-color: rgba(0,0,0,.5);
          -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
        }
    </style>
</head>
<body>
    `)
//line app/vmalert/tpl/header.qtpl:55
	StreamPrintNavItems(qw422016, title, pages)
//line app/vmalert/tpl/header.qtpl:55
	qw422016.N().S(`
    <main class="px-2">
`)
//line app/vmalert/tpl/header.qtpl:57
}

//line app/vmalert/tpl/header.qtpl:57
func WriteHeader(qq422016 qtio422016.Writer, title string, pages []NavItem) {
//line app/vmalert/tpl/header.qtpl:57
	qw422016 := qt422016.AcquireWriter(qq422016)
//line app/vmalert/tpl/header.qtpl:57
	StreamHeader(qw422016, title, pages)
//line app/vmalert/tpl/header.qtpl:57
	qt422016.ReleaseWriter(qw422016)
//line app/vmalert/tpl/header.qtpl:57
}

//line app/vmalert/tpl/header.qtpl:57
func Header(title string, pages []NavItem) string {
//line app/vmalert/tpl/header.qtpl:57
	qb422016 := qt422016.AcquireByteBuffer()
//line app/vmalert/tpl/header.qtpl:57
	WriteHeader(qb422016, title, pages)
//line app/vmalert/tpl/header.qtpl:57
	qs422016 := string(qb422016.B)
//line app/vmalert/tpl/header.qtpl:57
	qt422016.ReleaseByteBuffer(qb422016)
//line app/vmalert/tpl/header.qtpl:57
	return qs422016
//line app/vmalert/tpl/header.qtpl:57
}
