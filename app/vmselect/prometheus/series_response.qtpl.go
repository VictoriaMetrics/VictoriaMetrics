// Code generated by qtc from "series_response.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line app/vmselect/prometheus/series_response.qtpl:1
package prometheus

//line app/vmselect/prometheus/series_response.qtpl:1
import (
	"github.com/VictoriaMetrics/VictoriaMetrics/lib/querytracer"
	"github.com/valyala/quicktemplate"
)

// SeriesResponse generates response for /api/v1/series.See https://prometheus.io/docs/prometheus/latest/querying/api/#finding-series-by-label-matchers

//line app/vmselect/prometheus/series_response.qtpl:9
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line app/vmselect/prometheus/series_response.qtpl:9
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line app/vmselect/prometheus/series_response.qtpl:9
func StreamSeriesResponse(qw422016 *qt422016.Writer, resultsCh <-chan *quicktemplate.ByteBuffer, qt *querytracer.Tracer, qtDone func()) {
//line app/vmselect/prometheus/series_response.qtpl:9
	qw422016.N().S(`{`)
//line app/vmselect/prometheus/series_response.qtpl:11
	seriesCount := 0

//line app/vmselect/prometheus/series_response.qtpl:11
	qw422016.N().S(`"status":"success","data":[`)
//line app/vmselect/prometheus/series_response.qtpl:14
	bb, ok := <-resultsCh

//line app/vmselect/prometheus/series_response.qtpl:15
	if ok {
//line app/vmselect/prometheus/series_response.qtpl:16
		qw422016.N().Z(bb.B)
//line app/vmselect/prometheus/series_response.qtpl:18
		quicktemplate.ReleaseByteBuffer(bb)
		seriesCount++

//line app/vmselect/prometheus/series_response.qtpl:21
		for bb := range resultsCh {
//line app/vmselect/prometheus/series_response.qtpl:21
			qw422016.N().S(`,`)
//line app/vmselect/prometheus/series_response.qtpl:22
			qw422016.N().Z(bb.B)
//line app/vmselect/prometheus/series_response.qtpl:24
			quicktemplate.ReleaseByteBuffer(bb)
			seriesCount++

//line app/vmselect/prometheus/series_response.qtpl:27
		}
//line app/vmselect/prometheus/series_response.qtpl:28
	}
//line app/vmselect/prometheus/series_response.qtpl:28
	qw422016.N().S(`]`)
//line app/vmselect/prometheus/series_response.qtpl:31
	qt.Printf("generate response: series=%d", seriesCount)
	qtDone()

//line app/vmselect/prometheus/series_response.qtpl:34
	streamdumpQueryTrace(qw422016, qt)
//line app/vmselect/prometheus/series_response.qtpl:34
	qw422016.N().S(`}`)
//line app/vmselect/prometheus/series_response.qtpl:36
}

//line app/vmselect/prometheus/series_response.qtpl:36
func WriteSeriesResponse(qq422016 qtio422016.Writer, resultsCh <-chan *quicktemplate.ByteBuffer, qt *querytracer.Tracer, qtDone func()) {
//line app/vmselect/prometheus/series_response.qtpl:36
	qw422016 := qt422016.AcquireWriter(qq422016)
//line app/vmselect/prometheus/series_response.qtpl:36
	StreamSeriesResponse(qw422016, resultsCh, qt, qtDone)
//line app/vmselect/prometheus/series_response.qtpl:36
	qt422016.ReleaseWriter(qw422016)
//line app/vmselect/prometheus/series_response.qtpl:36
}

//line app/vmselect/prometheus/series_response.qtpl:36
func SeriesResponse(resultsCh <-chan *quicktemplate.ByteBuffer, qt *querytracer.Tracer, qtDone func()) string {
//line app/vmselect/prometheus/series_response.qtpl:36
	qb422016 := qt422016.AcquireByteBuffer()
//line app/vmselect/prometheus/series_response.qtpl:36
	WriteSeriesResponse(qb422016, resultsCh, qt, qtDone)
//line app/vmselect/prometheus/series_response.qtpl:36
	qs422016 := string(qb422016.B)
//line app/vmselect/prometheus/series_response.qtpl:36
	qt422016.ReleaseByteBuffer(qb422016)
//line app/vmselect/prometheus/series_response.qtpl:36
	return qs422016
//line app/vmselect/prometheus/series_response.qtpl:36
}
