// Code generated by qtc from "helpers.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:1
package pb

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:1
import (
	"encoding/base64"
	"strconv"
)

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:7
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:7
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:7
func (kvl *KeyValueList) StreamFormatString(qw422016 *qt422016.Writer) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:8
	if len(kvl.Values) > 0 {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:8
		qw422016.N().S(`{`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:10
		for i, v := range kvl.Values {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:11
			qw422016.N().Q(v.Key)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:11
			qw422016.N().S(`:`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:11
			qw422016.N().S(v.Value.FormatString(false))
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:12
			if i+1 < len(kvl.Values) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:12
				qw422016.N().S(`,`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:12
			}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:13
		}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:13
		qw422016.N().S(`}`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:15
	} else {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:15
		qw422016.N().S(`{}`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:17
	}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
func (kvl *KeyValueList) WriteFormatString(qq422016 qtio422016.Writer) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	qw422016 := qt422016.AcquireWriter(qq422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	kvl.StreamFormatString(qw422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	qt422016.ReleaseWriter(qw422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
func (kvl *KeyValueList) FormatString() string {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	qb422016 := qt422016.AcquireByteBuffer()
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	kvl.WriteFormatString(qb422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	qs422016 := string(qb422016.B)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	qt422016.ReleaseByteBuffer(qb422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
	return qs422016
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:18
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:22
func (av *ArrayValue) StreamFormatString(qw422016 *qt422016.Writer) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:23
	if len(av.Values) > 0 {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:23
		qw422016.N().S(`[`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:25
		for i, v := range av.Values {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:26
			qw422016.N().S(v.FormatString(false))
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:27
			if i+1 < len(av.Values) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:27
				qw422016.N().S(`,`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:27
			}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:28
		}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:28
		qw422016.N().S(`]`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:30
	} else {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:30
		qw422016.N().S(`[]`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:32
	}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
func (av *ArrayValue) WriteFormatString(qq422016 qtio422016.Writer) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	qw422016 := qt422016.AcquireWriter(qq422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	av.StreamFormatString(qw422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	qt422016.ReleaseWriter(qw422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
func (av *ArrayValue) FormatString() string {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	qb422016 := qt422016.AcquireByteBuffer()
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	av.WriteFormatString(qb422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	qs422016 := string(qb422016.B)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	qt422016.ReleaseByteBuffer(qb422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
	return qs422016
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:33
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:37
func (av *AnyValue) StreamFormatString(qw422016 *qt422016.Writer, toplevel bool) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:38
	if av == nil {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:39
		if !toplevel {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:39
			qw422016.N().S(`null`)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:41
		}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:42
		return
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:43
	}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:44
	switch {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:45
	case av.StringValue != nil:
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:46
		if toplevel {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:47
			qw422016.N().S(*av.StringValue)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:48
		} else {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:49
			qw422016.N().Q(*av.StringValue)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:50
		}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:51
	case av.BoolValue != nil:
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:52
		qw422016.N().S(strconv.FormatBool(*av.BoolValue))
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:53
	case av.IntValue != nil:
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:54
		qw422016.N().DL(*av.IntValue)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:55
	case av.DoubleValue != nil:
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:56
		qw422016.N().S(float64AsString(*av.DoubleValue))
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:57
	case av.ArrayValue != nil:
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:58
		qw422016.N().S(av.ArrayValue.FormatString())
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:59
	case av.KeyValueList != nil:
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:60
		qw422016.N().S(av.KeyValueList.FormatString())
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:61
	case av.BytesValue != nil:
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:62
		qw422016.N().S(base64.StdEncoding.EncodeToString(*av.BytesValue))
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:63
	}
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
func (av *AnyValue) WriteFormatString(qq422016 qtio422016.Writer, toplevel bool) {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	qw422016 := qt422016.AcquireWriter(qq422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	av.StreamFormatString(qw422016, toplevel)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	qt422016.ReleaseWriter(qw422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
}

//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
func (av *AnyValue) FormatString(toplevel bool) string {
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	qb422016 := qt422016.AcquireByteBuffer()
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	av.WriteFormatString(qb422016, toplevel)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	qs422016 := string(qb422016.B)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	qt422016.ReleaseByteBuffer(qb422016)
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
	return qs422016
//line lib/protoparser/opentelemetry/pb/helpers.qtpl:64
}
