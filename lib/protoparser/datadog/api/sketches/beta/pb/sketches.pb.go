// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v3.15.8
// source: lib/protoparser/datadog/api/sketches/beta/proto/sketches.proto

package pb

type MetricPayload_MetricType int32

const (
	MetricPayload_UNSPECIFIED MetricPayload_MetricType = 0
	MetricPayload_COUNT       MetricPayload_MetricType = 1
	MetricPayload_RATE        MetricPayload_MetricType = 2
	MetricPayload_GAUGE       MetricPayload_MetricType = 3
)

// Enum value maps for MetricPayload_MetricType.
var (
	MetricPayload_MetricType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "COUNT",
		2: "RATE",
		3: "GAUGE",
	}
	MetricPayload_MetricType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"COUNT":       1,
		"RATE":        2,
		"GAUGE":       3,
	}
)

func (x MetricPayload_MetricType) Enum() *MetricPayload_MetricType {
	p := new(MetricPayload_MetricType)
	*p = x
	return p
}

type CommonMetadata struct {
	unknownFields []byte

	AgentVersion string  `protobuf:"bytes,1,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	Timezone     string  `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
	CurrentEpoch float64 `protobuf:"fixed64,3,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	InternalIp   string  `protobuf:"bytes,4,opt,name=internal_ip,json=internalIp,proto3" json:"internal_ip,omitempty"`
	PublicIp     string  `protobuf:"bytes,5,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
	ApiKey       string  `protobuf:"bytes,6,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

type MetricPayload struct {
	unknownFields []byte

	Series []*MetricPayload_MetricSeries `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
}

type EventsPayload struct {
	unknownFields []byte

	Events   []*EventsPayload_Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Metadata *CommonMetadata        `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

type SketchPayload struct {
	unknownFields []byte

	Sketches []*SketchPayload_Sketch `protobuf:"bytes,1,rep,name=sketches,proto3" json:"sketches,omitempty"`
	Metadata *CommonMetadata         `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

type MetricPayload_MetricPoint struct {
	unknownFields []byte

	// metric value
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// timestamp for this value in seconds since the UNIX epoch
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

type MetricPayload_Resource struct {
	unknownFields []byte

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

type MetricPayload_MetricSeries struct {
	unknownFields []byte

	// Resources this series applies to; include at least
	// { type="host", name=<hostname> }
	Resources []*MetricPayload_Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	// metric name
	Metric string `protobuf:"bytes,2,opt,name=metric,proto3" json:"metric,omitempty"`
	// tags for this metric
	Tags []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// data points for this metric
	Points []*MetricPayload_MetricPoint `protobuf:"bytes,4,rep,name=points,proto3" json:"points,omitempty"`
	// type of metric
	Type MetricPayload_MetricType `protobuf:"varint,5,opt,name=type,proto3,enum=beta.MetricPayload_MetricType" json:"type,omitempty"`
	// metric unit name
	Unit string `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`
	// source of this metric (check name, etc.)
	SourceTypeName string `protobuf:"bytes,7,opt,name=source_type_name,json=sourceTypeName,proto3" json:"source_type_name,omitempty"`
	// interval, in seconds, between samples of this metric
	Interval int64 `protobuf:"varint,8,opt,name=interval,proto3" json:"interval,omitempty"`
}

type EventsPayload_Event struct {
	unknownFields []byte

	Title          string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Text           string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Ts             int64    `protobuf:"varint,3,opt,name=ts,proto3" json:"ts,omitempty"`
	Priority       string   `protobuf:"bytes,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Host           string   `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	Tags           []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	AlertType      string   `protobuf:"bytes,7,opt,name=alert_type,json=alertType,proto3" json:"alert_type,omitempty"`
	AggregationKey string   `protobuf:"bytes,8,opt,name=aggregation_key,json=aggregationKey,proto3" json:"aggregation_key,omitempty"`
	SourceTypeName string   `protobuf:"bytes,9,opt,name=source_type_name,json=sourceTypeName,proto3" json:"source_type_name,omitempty"`
}

type SketchPayload_Sketch struct {
	unknownFields []byte

	Metric        string                               `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Host          string                               `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Distributions []*SketchPayload_Sketch_Distribution `protobuf:"bytes,3,rep,name=distributions,proto3" json:"distributions,omitempty"`
	Tags          []string                             `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Dogsketches   []*SketchPayload_Sketch_Dogsketch    `protobuf:"bytes,7,rep,name=dogsketches,proto3" json:"dogsketches,omitempty"`
}

type SketchPayload_Sketch_Distribution struct {
	unknownFields []byte

	Ts    int64     `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Cnt   int64     `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`
	Min   float64   `protobuf:"fixed64,3,opt,name=min,proto3" json:"min,omitempty"`
	Max   float64   `protobuf:"fixed64,4,opt,name=max,proto3" json:"max,omitempty"`
	Avg   float64   `protobuf:"fixed64,5,opt,name=avg,proto3" json:"avg,omitempty"`
	Sum   float64   `protobuf:"fixed64,6,opt,name=sum,proto3" json:"sum,omitempty"`
	V     []float64 `protobuf:"fixed64,7,rep,packed,name=v,proto3" json:"v,omitempty"`
	G     []uint32  `protobuf:"varint,8,rep,packed,name=g,proto3" json:"g,omitempty"`
	Delta []uint32  `protobuf:"varint,9,rep,packed,name=delta,proto3" json:"delta,omitempty"`
	Buf   []float64 `protobuf:"fixed64,10,rep,packed,name=buf,proto3" json:"buf,omitempty"`
}

type SketchPayload_Sketch_Dogsketch struct {
	unknownFields []byte

	Ts  int64    `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Cnt int64    `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`
	Min float64  `protobuf:"fixed64,3,opt,name=min,proto3" json:"min,omitempty"`
	Max float64  `protobuf:"fixed64,4,opt,name=max,proto3" json:"max,omitempty"`
	Avg float64  `protobuf:"fixed64,5,opt,name=avg,proto3" json:"avg,omitempty"`
	Sum float64  `protobuf:"fixed64,6,opt,name=sum,proto3" json:"sum,omitempty"`
	K   []int32  `protobuf:"zigzag32,7,rep,packed,name=k,proto3" json:"k,omitempty"`
	N   []uint32 `protobuf:"varint,8,rep,packed,name=n,proto3" json:"n,omitempty"`
}
