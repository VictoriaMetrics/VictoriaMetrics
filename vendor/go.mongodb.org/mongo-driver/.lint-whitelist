bson/bson.go:103:5: error var SetZero should have name of the form ErrFoo
bson/bson.go:187:6: type ObjectId should be ObjectID
bson/bson.go:192:6: func ObjectIdHex should be ObjectIDHex
bson/bson.go:202:6: func IsObjectIdHex should be IsObjectIDHex
bson/bson.go:249:6: func NewObjectId should be NewObjectID
bson/bson.go:273:6: func NewObjectIdWithTime should be NewObjectIDWithTime
bson/bson.go:470:2: struct field Id should be ID
bson/bson.go:587:21: error strings should not be capitalized or end with punctuation or a newline
bson/bson.go:589:21: error strings should not be capitalized or end with punctuation or a newline
bson/bson.go:613:21: error strings should not be capitalized or end with punctuation or a newline
bson/bson.go:615:21: error strings should not be capitalized or end with punctuation or a newline
bson/encode.go:46:2: var typeObjectId should be typeObjectID
bson/internal/json/stream_test.go:196:3: struct field Id should be ID
bson/internal/json/stream_test.go:221:3: struct field Id should be ID
bson/internal/json/stream_test.go:285:22: should omit type []tokenStreamCase from declaration of var tokenStreamCases; it will be inferred from the right-hand side
bson/internal/testutil/close_helper.go:14:1: exported function CloseReadOnlyFile should have comment or be unexported
bson/internal/testutil/close_helper.go:8:1: exported function CloseOrError should have comment or be unexported
bson/json.go:246:6: func jdecObjectId should be jdecObjectID
bson/json.go:263:6: func jencObjectId should be jencObjectID
mongo/internal/testutil/helpers/helpers.go:10:1: exported function RequireNoErrorOnClose should have comment or be unexported
mongo/internal/testutil/helpers/helpers.go:14:1: exported function FindJSONFilesInDir should have comment or be unexported
mongo/internal/testutil/helpers/helpers.go:45:1: exported function VerifyConnStringOptions should have comment or be unexported
mongo/options/find_and_modify.go:19:1: exported function CopyFindOneAndReplaceOptions should have comment or be unexported
mongo/options/find_and_modify.go:29:1: exported function CopyFindOneAndUpdateOptions should have comment or be unexported
mongo/options/find_and_modify.go:9:1: exported function CopyFindOneAndDeleteOptions should have comment or be unexported
mongo/options.go:157:1: exported function OplogReplay should have comment or be unexported
mongo/options.go:177:56: exported func ReadPreference returns unexported type *mongo.optReadPreference, which can be annoying to use
bson/internal/jsonparser/bytes.go:9:10: should omit type bool from declaration of var neg; it will be inferred from the right-hand side
bson/internal/jsonparser/bytes.go:25:9: if block ends with a return statement, so drop this else and outdent its block
bson/internal/jsonparser/escape.go:113:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/escape.go:123:1: comment on exported function Unescape should be of the form "Unescape ..."
bson/internal/jsonparser/parser.go:14:2: error var KeyPathNotFoundError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:15:2: error var UnknownValueTypeError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:16:2: error var MalformedJsonError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:16:2: var MalformedJsonError should be MalformedJSONError
bson/internal/jsonparser/parser.go:17:2: error var MalformedStringError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:18:2: error var MalformedArrayError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:19:2: error var MalformedObjectError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:20:2: error var MalformedValueError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:21:2: error var MalformedStringEscapeError should have name of the form ErrFoo
bson/internal/jsonparser/parser.go:147:11: if block ends with a return statement, so drop this else and outdent its block
bson/internal/jsonparser/parser.go:285:6: should replace curIdx += 1 with curIdx++
bson/internal/jsonparser/parser.go:292:12: if block ends with a return statement, so drop this else and outdent its block
bson/internal/jsonparser/parser.go:303:12: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:329:6: don't use underscores in Go names; range var pi_1 should be pi1
bson/internal/jsonparser/parser.go:329:12: don't use underscores in Go names; range var p_1 should be p1
bson/internal/jsonparser/parser.go:338:1: exported function EachKey should have comment or be unexported
bson/internal/jsonparser/parser.go:489:6: should replace curIdx += 1 with curIdx++
bson/internal/jsonparser/parser.go:503:12: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:517:1: comment on exported type ValueType should be of the form "ValueType ..." (with optional leading article)
bson/internal/jsonparser/parser.go:521:2: exported const NotExist should have comment (or a comment on this block) or be unexported
bson/internal/jsonparser/parser.go:582:1: comment on exported function Delete should be of the form "Delete ..."
bson/internal/jsonparser/parser.go:931:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:971:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:980:11: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:1006:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:1021:10: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:1128:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:1133:1: comment on exported function ParseFloat should be of the form "ParseFloat ..."
bson/internal/jsonparser/parser.go:1137:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser.go:1146:9: if block ends with a return statement, so drop this else and outdent its block (move short variable declaration to its own line if necessary)
bson/internal/jsonparser/parser_test.go:1361:5: var testJson should be testJSON
bson/internal/jsonpretty/pretty.go:7:1: comment on exported type Options should be of the form "Options ..." (with optional leading article)
examples/documentation_examples/examples.go:10:1: don't use an underscore in package name
